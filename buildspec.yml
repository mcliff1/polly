# uses aws/codebuild/nodejs:8.11.0
#  mcliff/slsbuild:1.0.0  (has sls and jq installed) - not working with that version
# variables provided by CodeBuild configuration (setup by CloudFormation)
# WEB_BUCKET - target S3 bucket that public content deployed too
# STACK_NAME name of the cloud stack to use for resources
version: 0.2


phases:

  install:
    commands:
      # loads all the project required node libs
      # - apt-get update && apt install -y jq
      # - npm install -g serverless
      - npm install
      - echo $STACK_NAME
      - ( cd api && serverless deploy --stack $STACK_NAME --stage $STACK_NAME --region $AWS_REGION --verbose )
      - ( cd api && serverless info --stack $STACK_NAME --stage $STACK_NAME --region $AWS_REGION )
      - STACK_DESC=$(aws cloudformation describe-stacks --stack-name $STACK_NAME)
      - echo $STACK_DESC
      #- API_HOST=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq '.Stacks[].Outputs | select (.OutputKey == "ApiHostName")')
      - echo $STACK_DESC | jq '.Stacks[].Outputs[]
      - echo $STACK_DESC | jq '.Stacks[].Outputs[] | select (.OutputKey = "ApiHostName")'
      - API_HOST=$(echo $STACK_DESC | jq '.Stacks[].Outputs[] | select (.OutputKey = "ApiHostName")')
      - DOMAIN=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq '.Stacks[].Outputs | select (.OutputKey == "DomainName")')
  build:
    commands:
      - echo "${API_HOST}.${DOMAIN}"
      - API_ENDPOINT=${API_HOST}.${DOMAIN} npm run build
  post_build:
    commands:
      # - ( cd api && serverless deploy --stack $STACK_NAME --stage dev --region $AWS_REGION --verbose )
      # - ( cd api && serverless info --stack $STACK_NAME --stage dev --region $AWS_REGION )
      - aws s3 sync ./build s3://$WEB_BUCKET/ --delete --acl public-read

artifacts:
  files:
    - "**/*"
  base-directory: build
